<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Out\secondary_bootloader.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Out\secondary_bootloader.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Sat Sep 17 11:09:45 2016
<BR><P>
<H3>Maximum Stack Usage =        392 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; spi_loadActiveImage &rArr; loadActiveImage &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[16]">ADC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">ADC_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[16]">ADC_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[11]">BLE_CRYPT_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[9]">BLE_CSCNT_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[b]">BLE_ERROR_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[d]">BLE_EVENT_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[7]">BLE_FINETGTIM_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[8]">BLE_GROSSTGTIM_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[10]">BLE_RADIOCNTL_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[c]">BLE_RX_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[a]">BLE_SLP_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[6]">BLE_WAKEUP_LP_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[19]">GPIO0_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[1a]">GPIO1_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[1b]">GPIO2_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[1c]">GPIO3_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[1d]">GPIO4_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[14]">I2C_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[17]">KEYBRD_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[18]">RFCAL_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[15]">SPI_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[e]">SWTIM_Handler</a> from timer.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[1f]">SystemInit</a> from system_cmsdk.o(.text) referenced from startup_cmsdk_cm0.o(.text)
 <LI><a href="#[13]">UART2_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[12]">UART_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[f]">WKUP_QUADEC_Handler</a> from startup_cmsdk_cm0.o(.text) referenced from startup_cmsdk_cm0.o(RESET)
 <LI><a href="#[20]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_cmsdk_cm0.o(.text)
 <LI><a href="#[1e]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[20]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[21]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[23]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[59]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[5a]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[5b]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[5c]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[5d]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>BLE_CRYPT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>BLE_CSCNT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BLE_ERROR_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>BLE_EVENT_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BLE_FINETGTIM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>BLE_GROSSTGTIM_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>BLE_RADIOCNTL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>BLE_RX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>BLE_SLP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BLE_WAKEUP_LP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>GPIO0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>GPIO1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>GPIO2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>GPIO3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>GPIO4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>KEYBRD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RFCAL_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>SPI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WKUP_QUADEC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_cmsdk_cm0.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, system_cmsdk.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(.text)
</UL>
<P><STRONG><a name="[5e]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_cmsdk.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[5f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[61]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[62]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[51]"></a>sw_reset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_run_user_application
</UL>

<P><STRONG><a name="[24]"></a>Decrypt_Image</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_convert_key
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadActiveImage
</UL>

<P><STRONG><a name="[2b]"></a>spi_loadActiveImage</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = spi_loadActiveImage &rArr; loadActiveImage &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_size_init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadActiveImage
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>start_timer</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>stop_timer</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[e]"></a>SWTIM_Handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_cmsdk_cm0.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>spi_flash_init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, spi_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_size_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
</UL>

<P><STRONG><a name="[30]"></a>spi_flash_read_status_reg</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_disable
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable_volatile
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_enable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>

<P><STRONG><a name="[33]"></a>spi_flash_wait_till_ready</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_fill
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_power_down
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_unique_id
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_memory_man_and_dev_id
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_status_reg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_disable
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable_volatile
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_enable
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_jedec_id
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[34]"></a>spi_read_flash_jedec_id</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
</UL>

<P><STRONG><a name="[38]"></a>spi_flash_auto_detect</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_jedec_id
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable
</UL>

<P><STRONG><a name="[39]"></a>spi_flash_set_write_enable</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_fill
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
</UL>

<P><STRONG><a name="[3a]"></a>spi_flash_write_enable_volatile</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>

<P><STRONG><a name="[3b]"></a>spi_flash_set_write_disable</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>

<P><STRONG><a name="[3c]"></a>spi_flash_write_status_reg</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
</UL>

<P><STRONG><a name="[2f]"></a>spi_flash_read_data</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_flash_read_data &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>

<P><STRONG><a name="[3d]"></a>spi_flash_page_program</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_enable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
</UL>

<P><STRONG><a name="[3e]"></a>spi_flash_block_erase</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_enable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>

<P><STRONG><a name="[3f]"></a>spi_flash_chip_erase</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_enable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase_forced
</UL>

<P><STRONG><a name="[40]"></a>spi_read_flash_memory_man_and_dev_id</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spi_read_flash_memory_man_and_dev_id &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_size_init
</UL>

<P><STRONG><a name="[41]"></a>spi_read_flash_unique_id</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>

<P><STRONG><a name="[42]"></a>spi_flash_write_data</STRONG> (Thumb, 110 bytes, Stack size 40 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
</UL>

<P><STRONG><a name="[44]"></a>spi_flash_power_down</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>

<P><STRONG><a name="[2d]"></a>spi_flash_release_from_power_down</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_flash_release_from_power_down &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>

<P><STRONG><a name="[45]"></a>spi_flash_configure_memory_protection</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_status_reg
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_enable
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase_forced
</UL>

<P><STRONG><a name="[46]"></a>spi_flash_chip_erase_forced</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_configure_memory_protection
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
</UL>

<P><STRONG><a name="[47]"></a>spi_flash_page_fill</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_enable
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_wait_till_ready
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_fill
</UL>

<P><STRONG><a name="[48]"></a>spi_flash_fill</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_set_bitmode
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_fill
</UL>

<P><STRONG><a name="[49]"></a>spi_flash_enable</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_auto_detect
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
</UL>

<P><STRONG><a name="[35]"></a>spi_cs_low</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlashRead
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_fill
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_unique_id
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_memory_man_and_dev_id
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_jedec_id
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[37]"></a>spi_cs_high</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_cs_high
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlashRead
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_fill
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_unique_id
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_memory_man_and_dev_id
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_jedec_id
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[4a]"></a>spi_init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = spi_init &rArr; spi_cs_high
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_enable
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
</UL>

<P><STRONG><a name="[31]"></a>spi_set_bitmode</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_fill
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_fill
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_power_down
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_unique_id
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_memory_man_and_dev_id
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_status_reg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_disable
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable_volatile
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_enable
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_jedec_id
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[4d]"></a>spi_release</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_release
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_run_user_application
</UL>

<P><STRONG><a name="[65]"></a>spi_disable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>spi_access</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = spi_access
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_transaction
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_fill
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_unique_id
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_memory_man_and_dev_id
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_page_program
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_jedec_id
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>

<P><STRONG><a name="[32]"></a>spi_transaction</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_access
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_power_down
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_chip_erase
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_block_erase
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_status_reg
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_disable
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_enable_volatile
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_set_write_enable
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_status_reg
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_release_from_power_down
</UL>

<P><STRONG><a name="[66]"></a>GPIO_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>GPIO_SetPinFunction</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetPinFunction
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
</UL>

<P><STRONG><a name="[4b]"></a>GPIO_SetInactive</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
</UL>

<P><STRONG><a name="[4c]"></a>GPIO_SetActive</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_release
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
</UL>

<P><STRONG><a name="[4e]"></a>GPIO_ConfigurePin</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinFunction
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetInactive
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetActive
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_run_user_application
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_peripheral_init
</UL>

<P><STRONG><a name="[67]"></a>GPIO_ConfigurePinPower</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>GPIO_GetPinStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>Start_run_user_application</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Start_run_user_application &rArr; GPIO_ConfigurePin &rArr; GPIO_SetPinFunction
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sw_reset
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_release
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1e]"></a>main</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = main &rArr; spi_loadActiveImage &rArr; loadActiveImage &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Start_run_user_application
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2c]"></a>spi_flash_peripheral_init</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, spi_commands.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_flash_peripheral_init &rArr; spi_init &rArr; spi_cs_high
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigurePin
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>

<P><STRONG><a name="[2e]"></a>spi_flash_size_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, spi_commands.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = spi_flash_size_init &rArr; spi_read_flash_memory_man_and_dev_id &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_read_flash_memory_man_and_dev_id
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>

<P><STRONG><a name="[54]"></a>putByte_SPI</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, spi_commands.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlashRead
</UL>

<P><STRONG><a name="[53]"></a>SpiFlashRead</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, spi_commands.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putByte_SPI
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_low
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_cs_high
</UL>

<P><STRONG><a name="[2a]"></a>crc32</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, crc32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crc32
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadActiveImage
</UL>

<P><STRONG><a name="[25]"></a>AES_set_key</STRONG> (Thumb, 296 bytes, Stack size 48 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = AES_set_key &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
</UL>

<P><STRONG><a name="[26]"></a>AES_convert_key</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AES_convert_key
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
</UL>

<P><STRONG><a name="[57]"></a>AES_decrypt</STRONG> (Thumb, 492 bytes, Stack size 112 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AES_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_decrypt
</UL>

<P><STRONG><a name="[27]"></a>AES_cbc_decrypt</STRONG> (Thumb, 180 bytes, Stack size 144 bytes, sw_aes.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_fill
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_write_data
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[55]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_set_key
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AES_cbc_decrypt
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[28]"></a>loadActiveImage</STRONG> (Thumb, 378 bytes, Stack size 120 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = loadActiveImage &rArr; Decrypt_Image &rArr; AES_cbc_decrypt &rArr; AES_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crc32
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Decrypt_Image
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_loadActiveImage
</UL>

<P><STRONG><a name="[29]"></a>FlashRead</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FlashRead &rArr; spi_flash_read_data &rArr; spi_flash_wait_till_ready &rArr; spi_flash_read_status_reg &rArr; spi_transaction &rArr; spi_cs_low
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_read_data
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;loadActiveImage
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
